import { StudentsService } from './students.service';
import { CreateStudentInput } from './create-student.input.type';
import { CommentTaskInput } from './comment-task-input';
import { FileInput } from './file.input';
import { File } from './file.entity';
import { MoveToStatusInput } from './moveToStatus.input';
import { Students } from './students.entity';
export declare class StudentsResolver {
    private studentsService;
    constructor(studentsService: StudentsService);
    createStudent(createStudentInput: CreateStudentInput): Promise<Students>;
    getStudents(): Promise<Students[]>;
    commentOnStudentTask(commentStudentTask: CommentTaskInput): Promise<true>;
    moveTaskToExecuting(moveToStatusInput: MoveToStatusInput): Promise<boolean>;
    movePersonalTaskToExecuting(moveToStatusInput: MoveToStatusInput): Promise<boolean>;
    moveTaskToCompleted(moveToStatusInput: MoveToStatusInput): Promise<boolean>;
    movePersonalTaskToCompleted(moveToStatusInput: MoveToStatusInput): Promise<boolean>;
    moveTaskToFinished(moveToStatusInput: MoveToStatusInput): Promise<boolean>;
    movePersonalTaskToFinished(moveToStatusInput: MoveToStatusInput): Promise<boolean>;
    moveTaskToReview(moveToStatusInput: MoveToStatusInput): Promise<boolean>;
    movePersonalTaskToReview(moveToStatusInput: MoveToStatusInput): Promise<boolean>;
    moveTaskToTodo(moveToStatusInput: MoveToStatusInput): Promise<boolean>;
    movePersonalTaskToTodo(moveToStatusInput: MoveToStatusInput): Promise<boolean>;
    getFile(fileInput: FileInput): Promise<File[]>;
    getStudentByUsername(username: string): Promise<Students>;
    getAllTodoOfStudent(username: string): Promise<Promise<import("../tasks/tasks.entity").Tasks>[]>;
    getAllPersonalTodoOfStudent(username: string): Promise<Promise<import("../tasks/perosonal.tasks.entity").PersonalTasks>[]>;
    getAllCompletedOfStudent(username: string): Promise<Promise<import("../tasks/tasks.entity").Tasks>[]>;
    getAllPersonalCompletedOfStudent(username: string): Promise<Promise<import("../tasks/perosonal.tasks.entity").PersonalTasks>[]>;
    getAllExecutingOfStudent(username: string): Promise<Promise<import("../tasks/tasks.entity").Tasks>[]>;
    getAllPersonalExecutingOfStudent(username: string): Promise<Promise<import("../tasks/perosonal.tasks.entity").PersonalTasks>[]>;
    getAllReviewOfStudent(username: string): Promise<string[]>;
    getAllReviewOfStudentByTeacher(username: string): Promise<Promise<import("../tasks/tasks.entity").Tasks>[]>;
    getAllPersonalReviewOfStudent(username: string): Promise<Promise<import("../tasks/perosonal.tasks.entity").PersonalTasks>[]>;
    getAllFinishedOfStudent(username: string): Promise<string[]>;
    getAllPersonalFinishedOfStudent(username: string): Promise<Promise<import("../tasks/perosonal.tasks.entity").PersonalTasks>[]>;
    getCountOfPersonalTasks(username: string): Promise<number[]>;
    getCountOfSchoolTasks(username: string): Promise<number[]>;
    getAllCount(username: string): Promise<number[][]>;
    getRecent(username: string): Promise<string[]>;
    getStudentBySem(sem: number): Promise<Students[]>;
}
